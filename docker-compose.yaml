services:
  users-db:
    image: postgres:17.4
    environment:
      POSTGRES_USER: user-service
      POSTGRES_PASSWORD: user-service
      POSTGRES_DB: user-service
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/user-service/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user-service" ]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      users-db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  companies-db:
    image: postgres:17.4
    environment:
      POSTGRES_USER: company-service
      POSTGRES_PASSWORD: company-service
      POSTGRES_DB: company-service
    ports:
      - "5434:5432"
    volumes:
      - companies_data:/var/lib/postgresql/data
      - ./services/company-service/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U company-service" ]
      interval: 5s
      timeout: 5s
      retries: 5

  company-service:
    build:
      context: ./services/company-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      companies-db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  companies_data:
